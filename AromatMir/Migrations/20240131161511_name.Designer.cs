// <auto-generated />
using System;
using AromatMir.DbContextT;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AromatMir.Migrations
{
    [DbContext(typeof(TradeContext))]
    [Migration("20240131161511_name")]
    partial class name
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AromatMir.Model.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeGive")
                        .IsRequired()
                        .HasColumnName("Code_Give")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CountOrder")
                        .HasColumnType("int");

                    b.Property<string>("FioClient")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("OrderDeliveryDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderPickupPoint")
                        .HasColumnType("int");

                    b.Property<bool>("OrderStatus")
                        .HasColumnType("bit")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TheOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderPickupPoint");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("AromatMir.Model.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("ProductArticleNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("OrderId", "ProductArticleNumber")
                        .HasName("PK__OrderPro__817A26627323D1E6");

                    b.HasIndex("ProductArticleNumber");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("AromatMir.Model.PickupPoint", b =>
                {
                    b.Property<int>("IdPickupPoint")
                        .HasColumnName("Id_PickupPoint")
                        .HasColumnType("int");

                    b.Property<string>("CityPickupPoint")
                        .IsRequired()
                        .HasColumnName("City_PickupPoint")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MailIndexPickupPoint")
                        .IsRequired()
                        .HasColumnName("MailIndex_PickupPoint")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NumberHousePickupPoint")
                        .IsRequired()
                        .HasColumnName("NumberHouse_PickupPoint")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StreetPickupPoint")
                        .IsRequired()
                        .HasColumnName("Street_PickupPoint")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdPickupPoint")
                        .HasName("PK_PikupPoint_1");

                    b.ToTable("PickupPoint");
                });

            modelBuilder.Entity("AromatMir.Model.Product", b =>
                {
                    b.Property<string>("ProductArticleNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProductCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductCost")
                        .HasColumnType("decimal(19, 4)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProductDiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductManufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProductPhoto")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<int>("ProductQuantityInStock")
                        .HasColumnType("int");

                    b.Property<bool>("ProductStatus")
                        .HasColumnType("bit");

                    b.HasKey("ProductArticleNumber")
                        .HasName("PK__Product__2EA7DCD544241CD6");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("AromatMir.Model.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AromatMir.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPatronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UserId");

                    b.HasIndex("UserRole");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AromatMir.Model.Order", b =>
                {
                    b.HasOne("AromatMir.Model.PickupPoint", "OrderPickupPointNavigation")
                        .WithMany("Order")
                        .HasForeignKey("OrderPickupPoint")
                        .HasConstraintName("FK_Order_PikupPoint")
                        .IsRequired();
                });

            modelBuilder.Entity("AromatMir.Model.OrderProduct", b =>
                {
                    b.HasOne("AromatMir.Model.Order", "Order")
                        .WithMany("OrderProduct")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderProd__Order__2D27B809")
                        .IsRequired();

                    b.HasOne("AromatMir.Model.Product", "ProductArticleNumberNavigation")
                        .WithMany("OrderProduct")
                        .HasForeignKey("ProductArticleNumber")
                        .HasConstraintName("FK__OrderProd__Produ__4222D4EF")
                        .IsRequired();
                });

            modelBuilder.Entity("AromatMir.Model.User", b =>
                {
                    b.HasOne("AromatMir.Model.Role", "UserRoleNavigation")
                        .WithMany("User")
                        .HasForeignKey("UserRole")
                        .HasConstraintName("FK__User__UserRole__4316F928")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
